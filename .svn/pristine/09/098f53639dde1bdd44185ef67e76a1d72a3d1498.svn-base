import App from "../../manager/App";
import FramingManager from "../../manager/FramingManager";
import RES from "../../res/RES";
import BaseUI from "../BaseUI";

const { ccclass, property } = cc._decorator;

@ccclass
export default class PigAttackView extends BaseUI {
    protected viewContent: cc.Node = null
    private closeBtn: cc.Node = null;
    protected attackItem: cc.Node = null
    protected scrollContent: cc.Node = null
    protected attackText: cc.Node = null;
    private historyList = []

    protected validateUI(): void {
        this.viewContent = this.node.getChildByName('viewContent')
        this.closeBtn = this.viewContent.getChildByName('popup_close')
        this.attackItem = this.viewContent.getChildByName('attackItem')
        this.scrollContent = this.viewContent.getChildByName('scrollview').getChildByName('view').getChildByName('content')
        this.attackText = this.attackItem.getChildByName('attackText')
    }
    protected initEvent(): void {
        this.closeBtn.on('click', this.close, this)
    }
    protected removeEvent(): void {
        this.closeBtn.off('click', this.close, this)
    }
    protected updateView(): void {
        this.gameHistory()
    }
    private gameHistory() {
        let onSuccess = (res) => {
            this.historyList = res.list.filter((item) => {
                return item.GameEnd
            })
            this.scrollContent.removeAllChildren()
            FramingManager.updateRecordList(this.historyList, this.getItem, this)
        }
        App.GameProxy.GameHistory({ onSuccess: onSuccess, data: { page: 1, pagesize: 30 } })
    }
    private getItem(item) {
        let attackItemCopy = cc.instantiate(this.attackItem)
        const name = attackItemCopy.getChildByName('name')
        const odds = attackItemCopy.getChildByName('odds')
        const rank = attackItemCopy.getChildByName('rank')
        attackItemCopy.active = true
        name.getComponent(cc.Label).string = item.Name
        odds.getComponent(cc.Label).string = item.Odds
        rank.getComponent(cc.Label).string = item.Period + 'Âè∑'
        RES.setSpriteFrame(attackItemCopy.getChildByName('success_fruit').getChildByName('fruitPic').getComponent(cc.Sprite), `common/fruit/img_fruit_${item.Nums}`)
        this.scrollContent.addChild(attackItemCopy)
    }
}