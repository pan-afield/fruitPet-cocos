// Learn TypeScript:
//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html

import UIConstant from "../../constant/UIConstant";
import EventDispatcher from "../../event/EventDispatcher";
import GameEvent from "../../event/GameEvent";
import App from "../../manager/App";
import MessageBoxManager from "../../manager/MessageBoxManager";
import RES from "../../res/RES";
import SilentLoader from "../../res/SilentLoader";
import UIUtil from "../../util/UIUtil";
import BaseUI from "../BaseUI";

const { ccclass, property } = cc._decorator;

@ccclass
export default class UserInfoView extends BaseUI {
    private todayFeed: cc.Node
    private gradeBtn: cc.Node
    private closeBtn: cc.Node;
    private openFishBtn: cc.Node;
    private serviceBtn: cc.Node;
    private openUpgradeBtn: cc.Node
    private levelList: cc.Node
    private userLevel: cc.Node
    private userFish: cc.Node
    private vipLevel: cc.Node
    private levelFish: cc.Node
    private levelFishText: cc.Node
    private levelTitle: cc.Node
    private upAward: cc.Node
    private progressBar: cc.Node
    private lvPro: cc.Node
    private getFish: cc.Node
    private short: cc.Node
    private award: cc.Node
    private awardAll: cc.Node
    private levelAllBtn: cc.Node
    private settingView: cc.Node
    private daySign: cc.Node
    private planteTo: cc.Node
    private closeSetting: cc.Node
    private getFruit: cc.Node
    private levelFishText1: cc.Node
    private coin: cc.Node
    private coupon: cc.Node
    private allView: cc.Node
    private imgPopup: cc.Node
    private bgFrame: cc.Node
    private shortNum: number
    private toFarm: cc.Node
    private hintMsg: cc.Node
    private farmTime
    private img_title: cc.Node

    protected validateUI(): void {
        this.todayFeed = this.node.getChildByName('todayFeed')
        this.gradeBtn = this.node.getChildByName('btn_Grade')
        this.farmTime = this.node.getChildByName('topBg').getChildByName('label')
        this.settingView = this.node.getChildByName('settingView')
        this.img_title = this.node.getChildByName('img_My fruit@2x')
        this.imgPopup = this.node.getChildByName('img_Popup')
        this.bgFrame = this.node.getChildByName('bg_frame')
        this.allView = this.node.getChildByName('all')
        this.closeSetting = this.settingView.getChildByName('popup_close')
        this.daySign = this.settingView.getChildByName('cancel')
        this.planteTo = this.settingView.getChildByName('bt_suer')
        this.hintMsg = this.settingView.getChildByName('msg')
        this.levelAllBtn = this.node.getChildByName('all').getChildByName('btn_UpgradeAll')
        this.getFruit = this.node.getChildByName('getFruit')
        this.award = this.node.getChildByName('award')
        this.awardAll = this.node.getChildByName('all').getChildByName('awardAll')
        this.short = this.node.getChildByName('short')
        this.progressBar = this.node.getChildByName('progressBar')
        this.lvPro = this.node.getChildByName('lvPro')
        this.upAward = this.node.getChildByName('upAward')
        this.closeBtn = this.node.getChildByName('popup_close')
        this.openFishBtn = this.node.getChildByName('icon_explain')
        this.serviceBtn = this.node.getChildByName('bt_sure')
        this.openUpgradeBtn = this.node.getChildByName('btn_upgrade')
        this.levelList = this.node.getChildByName('btn_Grade@2x')
        this.userLevel = this.node.getChildByName('UserLevel')
        this.userFish = this.node.getChildByName('UserFish')
        this.vipLevel = this.node.getChildByName('img_Grade').getChildByName('vipLevel')
        this.levelFish = this.node.getChildByName('levelFish')
        this.levelFishText = this.node.getChildByName('levelFishText')
        this.levelFishText1 = this.node.getChildByName('all').getChildByName('levelFishText1')
        this.levelTitle = this.node.getChildByName('levelTitle')
        this.getFish = this.node.getChildByName('btn_get')
        this.coin = this.node.getChildByName('coin')
        this.coupon = this.node.getChildByName('coupon')
        this.toFarm = this.node.getChildByName('toFarm')
    }
    protected updateView(): void {
        this.shortNum = 0
        this.getUserInfo()
        this.farmTimer()
    }
    /* 种植记录 */
    private farmRecord() {
        EventDispatcher.dispatch(GameEvent.OPEN_FRUIT_RECORD)
    }
    protected openLevel() {
        this.close()
        EventDispatcher.dispatch(GameEvent.OPEN_LEVEL_LIST)
    }
    private openSet() {
        this.settingView.active = true
    }
    private closeSet() {
        this.settingView.active = false
    }
    protected daySignTo() {
        this.close()
        EventDispatcher.dispatch(GameEvent.DAY_SIGN)
    }
    protected plante() {
        this.close()
        EventDispatcher.dispatch(GameEvent.GO_TO_FRAMSCENE)
    }
    protected openFish() {
        this.close()
        // EventDispatcher.dispatch(GameEvent.OPEN_FISH)
        App.ui.open(UIConstant.FishBagView)
    }
    protected smallFishView() {
        this.close()
        EventDispatcher.dispatch(GameEvent.OPEN_FISH)
    }
    protected openUpgrade() {
        if (this.shortNum) {
            // MessageBoxManager.showAlert({
            //     type: 1,
            //     msg: `水果不足\n再获得<color=#FA682C>${this.shortNum}</color=#FA682C>水果可升级\n立刻前往果园去种水果吧！`,
            //     okLabel: '去种水果',
            //     okCallBack: () => { EventDispatcher.dispatch(GameEvent.GO_TO_FRAMSCENE) }
            // })
            // this.hintMsg.getComponent(cc.RichText).string = `水果不足\n再获得<color=#FA682C>${this.shortNum}</color=#FA682C>水果可升级\n立刻前往果园去种水果吧！`
            // this.openSet()
            let onSuccess = (res) => {
                if (res.reward) {
                    MessageBoxManager.showAlert({
                        type: 2,
                        msg: `您未满足升级条件，系统随机\n赠送 <color=#FA682C>${res.reward.Name}x${res.reward.Nums}</color>`,
                        okLabel: '去种水果',
                        okCallBack: () => { EventDispatcher.dispatch(GameEvent.GO_TO_FRAMSCENE) }
                    })
                }
            }
            App.NewUserProxy.GetRandRwarad({ onSuccess, data: { type: 1 } })
            return
        }
        this.close()
        App.PetProxy.PetLevelUp({
            onSuccess: (res) => {
                App.audio.playEffectByName('upgrade')
                EventDispatcher.dispatch(GameEvent.UPDATE_USER_INFO)
                App.ui.open(UIConstant.UpgradeView, null, { data: res })
            }, data: { flag: 0 }
        })
    }
    protected openUpgrade1() {
        this.close()
        App.PetProxy.PetLevelUp({
            onSuccess: (res) => {
                App.audio.playEffectByName('upgrade')
                EventDispatcher.dispatch(GameEvent.UPDATE_USER_INFO)
                App.ui.open(UIConstant.UpgradeView, null, { data: res, level: App.gdata.userInfo.petInfo.level })
            }, data: { flag: 1 }
        })
    }
    protected getUserInfo() {
        let onSuccess = (res) => {
            console.log(res);
            this.coin.getComponent(cc.Label).string = UIUtil.toStone(res.coin)
            this.coupon.getComponent(cc.Label).string = UIUtil.toStone(res.giftcoupon)
            this.userFish.getComponent(cc.Label).string = `${UIUtil.toStone(res.curProps)}`
            this.vipLevel.getComponent(cc.Label).string = `LV${res.petInfo.level}`
            if (res.nextLevel) {
                // this.short.getComponent(cc.RichText).string = `还差<color=#FA682C>${res.curProps < res.nextLevel.props ? (res.nextLevel.props - res.curProps) : 0}</color>水果升至下一级`
                // this.progressBar.getComponent(cc.ProgressBar).progress = res.curProps < res.nextLevel.props ? res.curProps / res.nextLevel.props : 1
                // this.lvPro.getComponent(cc.Label).string = res.curProps < res.nextLevel.props ? (res.curProps / res.nextLevel.props * 100).toFixed(0) + '%' : '100%'
                // this.upAward.getComponent(cc.Label).string = `${res.nextLevel.props}礼券`

                if (res.curProps < res.nextLevel.props) {
                    this.shortNum = res.nextLevel.props - res.curProps
                    this.levelTitle.getComponent(cc.RichText).string = `再获得<color=#FA682C>${UIUtil.toStone(res.nextLevel.props - res.curProps)}</color>水果升级至<color=#FA682C>LV${res.nextLevel.level}</color>`
                    this.levelFishText.getComponent(cc.RichText).string = `<b>升至LV${res.nextLevel.level}赠<color=#FF4A00>${UIUtil.toStone(res.nextLevel.props)}礼券</color></b>`
                    this.award.getComponent(cc.Label).string = `可兑换${res.nextLevel.props / 10000}元话费/京东卡`
                    this.levelFishText1.getComponent(cc.RichText).string = `<b>升至LV${res.maxLevel}赠<color=#FF4A00>${res.maxLevelReward}礼券</b></color>`
                    this.awardAll.getComponent(cc.Label).string = `可兑换${res.maxLevelReward / 10000}元话费/京东卡`
                    this.allView.active = false
                    // this.imgPopup.height = 1080
                    RES.setSpriteFrame(this.imgPopup.getComponent(cc.Sprite), 'view/userInfo/bg_Popup01@2x')
                    RES.setSpriteFrame(this.bgFrame.getComponent(cc.Sprite), 'view/userInfo/img_frame02@2x')
                    this.toFarm.y = -380
                    this.gradeBtn.y = -460
                    this.todayFeed.y = -460
                    // this.levelFish.getComponent(cc.Label).string = `水果X${res.nextLevel.props}`
                    // this.award.active = false
                    // this.awardAll.active = false
                    // this.openUpgradeBtn.getComponent(cc.Animation).stop()
                    // RES.setSpriteFrame(this.levelAllBtn.getComponent(cc.Sprite), '/view/userInfo/btn_Upgrade all02@2x')
                    // RES.setSpriteFrame(this.openUpgradeBtn.getComponent(cc.Sprite), '/view/userInfo/btn_upgrade02@2x')
                    // this.openUpgradeBtn.getChildByName('Label').color = cc.color(255, 255, 255)
                } else {
                    if (res.maxLevel === res.nextLevel.level) {
                        this.allView.active = false
                        // this.imgPopup.height = 1080
                        this.toFarm.y = -380
                        this.gradeBtn.y = -460
                        this.todayFeed.y = -460
                        RES.setSpriteFrame(this.imgPopup.getComponent(cc.Sprite), 'view/userInfo/bg_Popup01@2x')
                        RES.setSpriteFrame(this.bgFrame.getComponent(cc.Sprite), 'view/userInfo/img_frame02@2x')
                    } else {
                        this.allView.active = true
                        // this.imgPopup.height = 1240
                        this.toFarm.y = -513
                        this.gradeBtn.y = -590
                        this.todayFeed.y = -590
                        RES.setSpriteFrame(this.imgPopup.getComponent(cc.Sprite), 'view/userInfo/bg_Popup@2x')
                        RES.setSpriteFrame(this.bgFrame.getComponent(cc.Sprite), 'view/userInfo/img_frame03@2x')
                    }
                    this.levelTitle.getComponent(cc.RichText).string = `当前水果最高可升级至<color=#FA682C>LV${res.maxLevel}</color>`
                    this.levelFishText.getComponent(cc.RichText).string = `<b>升至LV${res.nextLevel.level}赠<color=#FF4A00>${UIUtil.toStone(res.nextLevel.props)}礼券</color></b>`
                    this.award.getComponent(cc.Label).string = `可兑换${res.nextLevel.props / 10000}元话费/京东卡`
                    this.levelFishText1.getComponent(cc.RichText).string = `<b>升至LV${res.maxLevel}赠<color=#FF4A00>${UIUtil.toStone(res.maxLevelReward)}礼券</color></b>`
                    this.awardAll.getComponent(cc.Label).string = `可兑换${res.maxLevelReward / 10000}元话费/京东卡`
                    // this.levelFish.getComponent(cc.Label).string = `水果X${res.maxLevelNeedProps}`
                    // this.award.active = true
                    // this.awardAll.active = true
                    // this.openUpgradeBtn.getComponent(cc.Animation).play()
                    // RES.setSpriteFrame(this.levelAllBtn.getComponent(cc.Sprite), '/view/userInfo/btn_Upgrade all01@2x')
                    // RES.setSpriteFrame(this.openUpgradeBtn.getComponent(cc.Sprite), '/view/userInfo/btn_upgrade01@2x')
                    // this.openUpgradeBtn.getChildByName('Label').color = cc.color(250, 104, 41)
                }
            } else {
                // this.openUpgradeBtn.getComponent(cc.Animation).stop()
                // this.levelFish.getComponent(cc.Label).string = `小鱼干X---`
                // this.levelTitle.getComponent(cc.Label).string = `恭喜！您已满级！`
                // this.levelFishText.getComponent(cc.RichText).string = ''
                // RES.setSpriteFrame(this.openUpgradeBtn.getComponent(cc.Sprite), '/view/userInfo/btn_upgrade02@2x')
            }
            this.todayFeed.getComponent(cc.RichText).string = '今日喂食上限：0/100'
        }
        App.UserProxy.getUserInfo({ onSuccess: onSuccess })
    }
    private farmCountDown
    /* 农场倒计时 */
    private farmTimer() {
        this.unschedule(this.farmCountDown)
        App.GameProxy.farmGameInfo({
            onSuccess: (res) => {
                let second = res.Gameinfo.Countdown
                if (second > 60) {
                    this.farmTime.getComponent(cc.Label).string = Math.floor(second / 60) + '分' + second % 60 + '秒' + '成熟'
                } else {
                    this.farmTime.getComponent(cc.Label).string = second + '秒' + '成熟'
                }
                this.farmCountDown = () => {
                    if (second === 0) {
                        this.unschedule(this.farmCountDown)
                        this.farmTimer()
                        return
                    }
                    second--
                    if (second > 60) {
                        this.farmTime.getComponent(cc.Label).string = Math.floor(second / 60) + '分' + second % 60 + '秒' + '成熟'
                    } else {
                        this.farmTime.getComponent(cc.Label).string = second + '秒' + '成熟'
                    }
                }
                this.schedule(this.farmCountDown, 1)
            }
        })
    }
    private openFruitBag() {
        this.close()
        App.ui.open(UIConstant.FruitBagView)
    }
    private openLvList() {
        this.close()
        App.ui.open(UIConstant.PetLevelView)
    }
    protected initEvent(): void {
        this.levelList.on('click', this.openLevel, this)
        this.closeSetting.on('click', this.closeSet, this)
        this.img_title.on('click', this.openFruitBag, this)
        this.getFruit.on('click', this.openSet, this)
        this.daySign.on('click', this.daySignTo, this)
        this.planteTo.on('click', this.plante, this)
        this.toFarm.on('click', this.plante, this)
        this.openUpgradeBtn.on('click', this.openUpgrade, this)
        this.levelAllBtn.on('click', this.openUpgrade1, this)
        this.openFishBtn.on('click', this.openFish, this)
        this.getFish.on('click', this.smallFishView, this)
        this.serviceBtn.on('click', this.openService, this)
        this.closeBtn.on('click', this.close, this)
        this.gradeBtn.on('click', this.openLvList, this)
        this.farmTime.parent.on('click', this.farmRecord, this)
    }
    protected removeEvent(): void {
        this.getFruit.off('click', this.openSet, this)
        this.closeSetting.off('click', this.closeSet, this)
        this.img_title.on('click', this.openFruitBag, this)
        this.levelList.off('click', this.openLevel, this)
        this.daySign.off('click', this.daySignTo, this)
        this.planteTo.off('click', this.plante, this)
        this.toFarm.off('click', this.plante, this)
        this.openUpgradeBtn.off('click', this.openUpgrade, this)
        this.levelAllBtn.off('click', this.openUpgrade1, this)
        this.openFishBtn.off('click', this.openFish, this)
        this.getFish.off('click', this.smallFishView, this)
        this.serviceBtn.off('click', this.openService, this)
        this.closeBtn.off('click', this.close, this)
        this.gradeBtn.off('click', this.openLvList, this)
        this.farmTime.parent.off('click', this.farmRecord, this)
    }
    private openService() {
        // @ts-ignore
        wx.openCustomerServiceConversation({})
    }
}
